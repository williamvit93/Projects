// <auto-generated />
using Banco;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Banco.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Banco.Contas.Conta", b =>
                {
                    b.Property<int>("numero")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("clienteid");

                    b.Property<double>("saldo");

                    b.Property<int?>("tipoContaid");

                    b.HasKey("numero");

                    b.HasIndex("clienteid");

                    b.HasIndex("tipoContaid");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Banco.TipoConta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descricao");

                    b.HasKey("id");

                    b.ToTable("TiposConta");
                });

            modelBuilder.Entity("Banco.Usuarios.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.Property<string>("Rg");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Banco.Usuarios.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bairro");

                    b.Property<string>("cep");

                    b.Property<string>("cidade");

                    b.Property<int?>("clienteid");

                    b.Property<string>("estado");

                    b.Property<int>("numero");

                    b.Property<string>("rua");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Banco.Contas.Conta", b =>
                {
                    b.HasOne("Banco.Usuarios.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");

                    b.HasOne("Banco.TipoConta", "tipoConta")
                        .WithMany()
                        .HasForeignKey("tipoContaid");
                });

            modelBuilder.Entity("Banco.Usuarios.Endereco", b =>
                {
                    b.HasOne("Banco.Usuarios.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");
                });
#pragma warning restore 612, 618
        }
    }
}
